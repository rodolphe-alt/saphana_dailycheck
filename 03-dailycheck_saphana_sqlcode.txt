-- bundle version 20201030
/D:-- healtcheck CPU since 24H and top 20
/R:select TOP 20 HOST, TIME, ROUND(MEMORY_USED/1024/1024/1024,2) as "MEMORY_USED_GB", CPU, ACTIVE_THREAD_COUNT, WAITING_THREAD_COUNT, MVCC_VERSION_COUNT, CS_UNLOAD_COUNT  from "SYS"."M_LOAD_HISTORY_SERVICE" where TIME between ADD_SECONDS(current_timestamp, -86400) and current_timestamp and PORT='SAPHANA_INDEXPORT' and CPU>60 order by TIME desc;

/D:-- peak memory usage since 24H
/R:select ROUND(MAX(MEMORY_USED/1024/1024/1024),2) as "TOP_MEMORY_USED_GB" from "SYS"."M_LOAD_HISTORY_SERVICE" where TIME between ADD_SECONDS(current_timestamp, -86400) and current_timestamp and PORT='SAPHANA_INDEXPORT';

/D:-- search high usage of memory > 8GB and top 10
/R:select top 10 APP_USER, APPLICATION_NAME, STATEMENT_HASH, OPERATION, substring(CONCAT('--',STATEMENT_STRING), 1, 50), PARAMETERS,START_TIME, DURATION_MICROSEC/1000/1000 as DURATION_SEC, ADD_SECONDS (START_TIME, ROUND(DURATION_MICROSEC/1000/1000, 0)) as "END_TIME", round(MEMORY_SIZE/1024/1024/1024,2) as "Memory Size Gb" from M_EXPENSIVE_STATEMENTS where MEMORY_SIZE>8000000000 order by "Memory Size Gb" desc

/D:-- duraction average for top 20 users from EXPENSIVE_STATEMENTS>1sec , H-24 and limit of 30K entries of EXPENSIVE_STATEMENTS table
/R:select top 20 APP_USER, count(*) as "REQ_SQL", ROUND(AVG(DURATION_MICROSEC/1000/1000),2) as "AVG_SEC", ROUND(SUM(DURATION_MICROSEC/1000/1000),2) as "TOTAL_SEC" from M_EXPENSIVE_STATEMENTS where START_TIME between ADD_SECONDS(current_timestamp, -86400) and current_timestamp and APP_USER <> 'pxeadm' and APP_USER <>'' group by APP_USER order by "TOTAL_SEC" desc

/D:-- last backup db
/R:SELECT top 5 entry_type_name,sys_start_time,sys_end_time,state_name FROM SYS.M_BACKUP_CATALOG order by entry_id desc;

/Dno:-- last backups log since 3 days
/Rno:SELECT entry_type_name,sys_start_time,sys_end_time,state_name FROM SYS.M_BACKUP_CATALOG where entry_type_name != 'log backup' and sys_start_time between ADD_DAYS(current_timestamp, -3) and current_timestamp order by entry_id desc;

/D:-- 1977214 - SAP HANA: Growing number of rowstore table versions when a persistent sequence is used.
/R:SELECT * FROM M_MVCC_TABLES where NAME='NUM_VERSIONS' and PORT='SAPHANA_INDEXPORT';

/D:-- rowstore (1813245 - SAP HANA DB: Row store reorganization)
/R:SELECT HOST, PORT, CASE WHEN (((SUM(FREE_SIZE) / SUM(ALLOCATED_SIZE)) > 0.30) AND SUM(ALLOCATED_SIZE) > TO_DECIMAL(10)*1024*1024*1024) THEN 'TRUE' ELSE 'FALSE' END "Row store Reorganization Recommended", TO_DECIMAL( SUM(FREE_SIZE)*100 / SUM(ALLOCATED_SIZE), 10,2) "Free Space Ratio in %",TO_DECIMAL( SUM(ALLOCATED_SIZE)/1048576, 10, 2) "Allocated Size in MB",TO_DECIMAL( SUM(FREE_SIZE)/1048576, 10, 2) "Free Size in MB" FROM M_RS_MEMORY WHERE ( CATEGORY = 'TABLE' OR CATEGORY = 'CATALOG' ) GROUP BY HOST, PORT;

/D:-- AVG daily MEM_USED compared to ALLOCATION_LIMIT_GB
/R:SELECT TOP 10 DISTINCT(TO_VARCHAR(SERVER_TIMESTAMP,'YYYYMMDD')) as DATEJ, AVG(TO_DECIMAL (INSTANCE_TOTAL_MEMORY_USED_SIZE/1024/1024/1024,10,0)) as AVG_USED_GB, TO_DECIMAL (ALLOCATION_LIMIT/1024/1024/1024,10,0) as ALLOCATION_LIMIT_GB FROM _SYS_STATISTICS.HOST_RESOURCE_UTILIZATION_STATISTICS_BASE group by TO_VARCHAR(SERVER_TIMESTAMP,'YYYYMMDD'),TO_DECIMAL(ALLOCATION_LIMIT/1024/1024/1024,10,0) order by DATEJ desc

/D:-- Maximum peak used memory
/R:SELECT ROUND(SUM("M")/1024/1024/1024,2) as "Max Peak Used Memory GB" FROM (SELECT SUM(CODE_SIZE +SHARED_MEMORY_ALLOCATED_SIZE) AS "M" FROM SYS.M_SERVICE_MEMORY UNION SELECT SUM(INCLUSIVE_PEAK_ALLOCATION_SIZE) AS "M" FROM M_HEAP_MEMORY WHERE DEPTH = 0);

/D:-- daily unload sum
/R:select TO_VARCHAR(TIME,'YYYYMMDD') as DATEJ, SUM(CS_UNLOAD_COUNT) from M_LOAD_HISTORY_SERVICE group by TO_VARCHAR(TIME,'YYYYMMDD') order by DATEJ desc;

/D:-- top 10 table size
/R:select top 10 table_name, round(sum(MEMORY_SIZE_IN_TOTAL)/1024/1024,2) as "Memory Size Mb", sum(record_count) as total_record,count(part_id) as NB_PART from m_cs_tables where schema_name = 'SAPHANA_SCHEMA' group by table_name order by "Memory Size Mb" desc

/D:-- last admission control limits
/R:select top 10 *  from M_ADMISSION_CONTROL_EVENTS order by EVENT_TIME desc;

/D:-- last 5 Out of memory
/R:SELECT top 5 * from M_OUT_OF_MEMORY_EVENTS order by TIME DESC;

/D:-- Evaluation of CHECK_TABLE_CONSISTENCY results
/S:/opt/scripts/moni_hana/1969700/HANA_Consistency_CheckTableConsistency_Results_2.00.040+.txt

/D:-- Check for potentially critical historic time frames
/S:/opt/scripts/moni_hana/1969700/HANA_Global_CriticalTimeFrames_2.00.010+.txt

/D:-- Overview of out of memory (OOM) situations
/S:/opt/scripts/moni_hana/1969700/HANA_Memory_OutOfMemoryEvents_1.00.120+.txt

/D:-- Memory overview
/S:/opt/scripts/moni_hana/1969700/HANA_Memory_Overview_2.00.040+.txt

/D:-- General SAP HANA checks
/S:/opt/scripts/moni_hana/1969700/HANA_Configuration_MiniChecks_2.00.040+.txt

/D:-- Security related check list
/S:/opt/scripts/moni_hana/1969700/HANA_Security_MiniChecks_2.00.030+.txt
